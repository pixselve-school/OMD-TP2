@startuml
'https://plantuml.com/class-diagram

class Application{
    -String clipboard
    -String text
    -<color:green>UndoableCommand[] commandHistory</color>
    -<color:green>UndoableCommand[] undidCommandHistory</color>
    -<color:green>CommandRecord recording</color>
    -<color:green>boolean isInRecording</color>
    +void executeCommand(Command command)
}

abstract class Command{
    #Application application
    +void execute()
}

abstract class UndoableCommand ##[bold]green{
    -<color:green>String backup</color>
}

abstract class UndoableCommandWithSelection ##[bold]green {
    -<color:green>Integer startIndex</color>
    -<color:green>Integer endIndex</color>
}

class CommandRecord ##[bold]green {
    -<color:green>UndoableCommand[] commands</color>
    +<color:green>void addCommand(UndoableCommand command)</color>
}

UndoableCommand <|-[#green]- UndoableCommandWithSelection

Command <|-[#green]- UndoableCommand

Command <|-- CommandWithSelection

abstract class CommandWithSelection{
    #Integer startIndex
    #Integer endIndex
}

CommandWithSelection <|-- CopyCommand
UndoableCommandWithSelection <|-[#green]- CutCommand
UndoableCommandWithSelection <|-[#green]- PasteCommand
Command <|-- ModifySelection

class CopyCommand{
}

class PlayRecordCommand ##[bold]green{
}

class StartRecordCommand ##[bold]green{
}

class StopRecordCommand ##[bold]green{
}

class UndoCommand ##[bold]green{
}

class RedoCommand ##[bold]green{
}

Command <|-[#green]- UndoCommand
Command <|-[#green]- RedoCommand
Command <|-[#green]- StartRecordCommand
Command <|-[#green]- StopRecordCommand

UndoableCommand <|-[#green]- PlayRecordCommand

class CutCommand{
}

class PasteCommand{
}

class ModifySelection{
    -SelectionPart selectionPart
    -SelectionDirection direction
}

enum SelectionPart {
  BEGIN
  END
}

enum SelectionDirection {
  EXPAND
  SHRINK
}

Command -- Application
Application o-[#green]- CommandRecord

SelectionDirection -- ModifySelection
SelectionPart -- ModifySelection

@enduml